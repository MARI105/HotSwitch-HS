local Debugger = require("hotswitch-hs/lib/common/Debugger")

local MainController = require("hotswitch-hs/lib/controller/MainController")
local SettingModel = require("hotswitch-hs/lib/model/SettingModel")

local mainController = MainController.new()
local function main()
    mainController:create()
    mainController.panel.baseCanvas:resetAutoGeneratedKeys()
end

local function openOrClose()
    if mainController.panel.isOpen then
        mainController:focusWindowForCancel()
        mainController:finish()
    else
        mainController.windows.previousWindow = hs.window.frontmostWindow()

        -- Enable hotkeys before refresh windows,
        -- because refreshing windows is slow and take time.
        mainController:enable()
        mainController.panel.baseCanvas:activateHammerspoonWindow()
        mainController.windows:refreshOrderedWindows()
        mainController.panel:open()
        mainController:watchAppliationDeactivated()
    end
end

local function clearSettings()
    SettingModel.new().clear()
end

local function enableDebug()
    Debugger.setDebuggable(true)
end

-- arg: autoGeneratedKeys = {"a", "b", "c"}
local function setAutoGeneratedKeys(specifiedAutoGeneratedKeys)
    mainController.panel.baseCanvas:setSpecifiedAutoGeneratedKeys(specifiedAutoGeneratedKeys)
    mainController.panel.baseCanvas:resetAutoGeneratedKeys()
end

main()

return {
    openOrClose = openOrClose,
    clearSettings = clearSettings,
    enableDebug = enableDebug,
    setAutoGeneratedKeys = setAutoGeneratedKeys,
}